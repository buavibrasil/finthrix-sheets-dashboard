{"version":3,"file":"chunk-9288454b.js","sources":["../../src/services/cacheService.ts","../../src/services/exportService.ts","../../src/types/pdfTemplates.ts","../../src/services/pdfTemplateService.ts","../../src/components/Export/PDFTemplateSelector.tsx","../../src/components/Export/PDFTemplateCustomizer.tsx","../../src/components/Export/ExportButton.tsx"],"sourcesContent":["interface CacheItem<T> {\n  data: T;\n  timestamp: number;\n  expiresAt: number;\n  key: string;\n}\n\ninterface CacheOptions {\n  ttl?: number; // Time to live em milissegundos\n  maxSize?: number; // Tamanho máximo do cache\n}\n\nclass CacheService {\n  private cache = new Map<string, CacheItem<any>>();\n  private defaultTTL = 5 * 60 * 1000; // 5 minutos\n  private maxSize = 100; // Máximo 100 itens no cache\n\n  constructor(options: CacheOptions = {}) {\n    this.defaultTTL = options.ttl || this.defaultTTL;\n    this.maxSize = options.maxSize || this.maxSize;\n  }\n\n  /**\n   * Armazena um item no cache\n   */\n  set<T>(key: string, data: T, ttl?: number): void {\n    const now = Date.now();\n    const timeToLive = ttl || this.defaultTTL;\n    \n    // Remove itens expirados antes de adicionar novo\n    this.cleanup();\n    \n    // Se o cache está cheio, remove o item mais antigo\n    if (this.cache.size >= this.maxSize) {\n      const oldestKey = this.getOldestKey();\n      if (oldestKey) {\n        this.cache.delete(oldestKey);\n      }\n    }\n\n    const cacheItem: CacheItem<T> = {\n      data,\n      timestamp: now,\n      expiresAt: now + timeToLive,\n      key\n    };\n\n    this.cache.set(key, cacheItem);\n  }\n\n  /**\n   * Recupera um item do cache\n   */\n  get<T>(key: string): T | null {\n    const item = this.cache.get(key);\n    \n    if (!item) {\n      return null;\n    }\n\n    // Verifica se o item expirou\n    if (Date.now() > item.expiresAt) {\n      this.cache.delete(key);\n      return null;\n    }\n\n    return item.data as T;\n  }\n\n  /**\n   * Verifica se um item existe no cache e não expirou\n   */\n  has(key: string): boolean {\n    const item = this.cache.get(key);\n    \n    if (!item) {\n      return false;\n    }\n\n    if (Date.now() > item.expiresAt) {\n      this.cache.delete(key);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Remove um item específico do cache\n   */\n  delete(key: string): boolean {\n    return this.cache.delete(key);\n  }\n\n  /**\n   * Limpa todo o cache\n   */\n  clear(): void {\n    this.cache.clear();\n  }\n\n  /**\n   * Remove itens expirados do cache\n   */\n  cleanup(): void {\n    const now = Date.now();\n    const keysToDelete: string[] = [];\n\n    this.cache.forEach((item, key) => {\n      if (now > item.expiresAt) {\n        keysToDelete.push(key);\n      }\n    });\n\n    keysToDelete.forEach(key => this.cache.delete(key));\n  }\n\n  /**\n   * Retorna estatísticas do cache\n   */\n  getStats() {\n    this.cleanup();\n    return {\n      size: this.cache.size,\n      maxSize: this.maxSize,\n      items: Array.from(this.cache.values()).map(item => ({\n        key: item.key,\n        timestamp: item.timestamp,\n        expiresAt: item.expiresAt,\n        age: Date.now() - item.timestamp\n      }))\n    };\n  }\n\n  /**\n   * Encontra a chave do item mais antigo\n   */\n  private getOldestKey(): string | null {\n    let oldestKey: string | null = null;\n    let oldestTimestamp = Infinity;\n\n    this.cache.forEach((item, key) => {\n      if (item.timestamp < oldestTimestamp) {\n        oldestTimestamp = item.timestamp;\n        oldestKey = key;\n      }\n    });\n\n    return oldestKey;\n  }\n\n  /**\n   * Gera uma chave de cache baseada em parâmetros\n   */\n  generateKey(prefix: string, params: Record<string, any>): string {\n    const sortedParams = Object.keys(params)\n      .sort()\n      .map(key => `${key}:${JSON.stringify(params[key])}`)\n      .join('|');\n    \n    return `${prefix}:${sortedParams}`;\n  }\n}\n\n// Instância singleton do cache\nexport const cacheService = new CacheService({\n  ttl: 10 * 60 * 1000, // 10 minutos para dados de exportação\n  maxSize: 50 // Máximo 50 exportações em cache\n});\n\n// Cache específico para dados de dashboard (mais rápido)\nexport const dashboardCache = new CacheService({\n  ttl: 2 * 60 * 1000, // 2 minutos para dados do dashboard\n  maxSize: 20\n});\n\nexport default cacheService;","import jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport * as XLSX from 'xlsx';\nimport { Transaction, AccountPayable } from '@/types';\nimport { PDFTemplate } from '@/types/pdfTemplates';\nimport { cacheService } from './cacheService';\n\nexport interface ExportData {\n  kpis: typeof import('@/utils/mockData').mockKPIs;\n  transactions: Transaction[];\n  accountsPayable: AccountPayable[];\n  period: string;\n  generatedAt: string;\n}\n\nexport interface ExportOptions {\n  includeCharts?: boolean;\n  includeTransactions?: boolean;\n  includeAccountsPayable?: boolean;\n  includeKPIs?: boolean;\n  format?: 'pdf' | 'excel' | 'csv' | 'json';\n  fileName?: string;\n  pdfTemplate?: PDFTemplate;\n  csvOptions?: {\n    delimiter?: string;\n    includeHeaders?: boolean;\n    encoding?: string;\n  };\n  jsonOptions?: {\n    pretty?: boolean;\n    includeMetadata?: boolean;\n  };\n}\n\nclass ExportService {\n  /**\n   * Exporta dados do dashboard em PDF\n   */\n  async exportToPDF(data: ExportData, options: ExportOptions = {}): Promise<void> {\n    const {\n      includeCharts = true,\n      includeTransactions = true,\n      includeAccountsPayable = true,\n      includeKPIs = true,\n      fileName = `finthrix-relatorio-${new Date().toISOString().split('T')[0]}`\n    } = options;\n\n    try {\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const pageWidth = pdf.internal.pageSize.getWidth();\n      const pageHeight = pdf.internal.pageSize.getHeight();\n      let yPosition = 20;\n\n      // Cabeçalho\n      pdf.setFontSize(20);\n      pdf.setFont('helvetica', 'bold');\n      pdf.text('FinThrix - Relatório Financeiro', pageWidth / 2, yPosition, { align: 'center' });\n      \n      yPosition += 10;\n      pdf.setFontSize(12);\n      pdf.setFont('helvetica', 'normal');\n      pdf.text(`Período: ${data.period}`, pageWidth / 2, yPosition, { align: 'center' });\n      \n      yPosition += 5;\n      pdf.text(`Gerado em: ${data.generatedAt}`, pageWidth / 2, yPosition, { align: 'center' });\n      \n      yPosition += 20;\n\n      // KPIs\n      if (includeKPIs) {\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.text('Indicadores Principais', 20, yPosition);\n        yPosition += 10;\n\n        pdf.setFontSize(12);\n        pdf.setFont('helvetica', 'normal');\n        \n        const kpiData = [\n          ['Saldo Atual', this.formatCurrency(data.kpis.currentBalance)],\n          ['Total de Entradas', this.formatCurrency(data.kpis.totalIncome)],\n          ['Total de Saídas', this.formatCurrency(data.kpis.totalExpenses)],\n          ['Contas a Pagar', this.formatCurrency(data.kpis.accountsPayable)],\n          ['Contas Vencidas', this.formatCurrency(data.kpis.overdueAccounts)]\n        ];\n\n        kpiData.forEach(([label, value]) => {\n          pdf.text(`${label}: ${value}`, 20, yPosition);\n          yPosition += 7;\n        });\n\n        yPosition += 10;\n      }\n\n      // Gráficos (captura de tela)\n      if (includeCharts) {\n        await this.addChartsToPDF(pdf, yPosition);\n        yPosition += 100; // Espaço estimado para gráficos\n      }\n\n      // Verificar se precisa de nova página\n      if (yPosition > pageHeight - 50) {\n        pdf.addPage();\n        yPosition = 20;\n      }\n\n      // Transações\n      if (includeTransactions && data.transactions.length > 0) {\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.text('Transações Recentes', 20, yPosition);\n        yPosition += 10;\n\n        pdf.setFontSize(10);\n        pdf.setFont('helvetica', 'normal');\n\n        // Cabeçalho da tabela\n        pdf.text('Data', 20, yPosition);\n        pdf.text('Descrição', 50, yPosition);\n        pdf.text('Categoria', 120, yPosition);\n        pdf.text('Valor', 160, yPosition);\n        yPosition += 7;\n\n        // Linha separadora\n        pdf.line(20, yPosition - 2, 190, yPosition - 2);\n\n        data.transactions.slice(0, 15).forEach((transaction) => {\n          if (yPosition > pageHeight - 20) {\n            pdf.addPage();\n            yPosition = 20;\n          }\n\n          const date = new Date(transaction.date).toLocaleDateString('pt-BR');\n          const value = transaction.type === 'income' ? '+' : '-';\n          \n          pdf.text(date, 20, yPosition);\n          pdf.text(transaction.description.substring(0, 25), 50, yPosition);\n          pdf.text(transaction.category, 120, yPosition);\n          pdf.text(`${value}${this.formatCurrency(transaction.amount)}`, 160, yPosition);\n          yPosition += 6;\n        });\n\n        yPosition += 10;\n      }\n\n      // Contas a Pagar\n      if (includeAccountsPayable && data.accountsPayable.length > 0) {\n        if (yPosition > pageHeight - 50) {\n          pdf.addPage();\n          yPosition = 20;\n        }\n\n        pdf.setFontSize(16);\n        pdf.setFont('helvetica', 'bold');\n        pdf.text('Contas a Pagar', 20, yPosition);\n        yPosition += 10;\n\n        pdf.setFontSize(10);\n        pdf.setFont('helvetica', 'normal');\n\n        // Cabeçalho da tabela\n        pdf.text('Vencimento', 20, yPosition);\n        pdf.text('Descrição', 60, yPosition);\n        pdf.text('Categoria', 120, yPosition);\n        pdf.text('Valor', 160, yPosition);\n        pdf.text('Status', 180, yPosition);\n        yPosition += 7;\n\n        // Linha separadora\n        pdf.line(20, yPosition - 2, 190, yPosition - 2);\n\n        data.accountsPayable.forEach((account) => {\n          if (yPosition > pageHeight - 20) {\n            pdf.addPage();\n            yPosition = 20;\n          }\n\n          const dueDate = new Date(account.dueDate).toLocaleDateString('pt-BR');\n          const status = account.status === 'pending' ? 'Pendente' : \n                        account.status === 'paid' ? 'Paga' : 'Vencida';\n          \n          pdf.text(dueDate, 20, yPosition);\n          pdf.text(account.description.substring(0, 20), 60, yPosition);\n          pdf.text(account.category, 120, yPosition);\n          pdf.text(this.formatCurrency(account.amount), 160, yPosition);\n          pdf.text(status, 180, yPosition);\n          yPosition += 6;\n        });\n      }\n\n      // Rodapé\n      const totalPages = (pdf as any).internal.getNumberOfPages();\n      for (let i = 1; i <= totalPages; i++) {\n        pdf.setPage(i);\n        pdf.setFontSize(8);\n        pdf.text(`Página ${i} de ${totalPages}`, pageWidth - 30, pageHeight - 10);\n        pdf.text('Gerado por FinThrix Dashboard', 20, pageHeight - 10);\n      }\n\n      pdf.save(`${fileName}.pdf`);\n    } catch (error) {\n      console.error('Erro ao exportar PDF:', error);\n      throw new Error('Falha ao gerar relatório em PDF');\n    }\n  }\n\n  /**\n   * Exporta dados do dashboard em Excel\n   */\n  async exportToExcel(data: ExportData, options: ExportOptions = {}): Promise<void> {\n    const {\n      includeTransactions = true,\n      includeAccountsPayable = true,\n      includeKPIs = true,\n      fileName = `finthrix-dados-${new Date().toISOString().split('T')[0]}`\n    } = options;\n\n    try {\n      const workbook = XLSX.utils.book_new();\n\n      // Planilha de KPIs\n      if (includeKPIs) {\n        const kpiData = [\n          ['Indicador', 'Valor'],\n          ['Saldo Atual', data.kpis.currentBalance],\n          ['Total de Entradas', data.kpis.totalIncome],\n          ['Total de Saídas', data.kpis.totalExpenses],\n          ['Contas a Pagar', data.kpis.accountsPayable],\n          ['Contas Vencidas', data.kpis.overdueAccounts],\n          [],\n          ['Período', data.period],\n          ['Gerado em', data.generatedAt]\n        ];\n\n        const kpiWorksheet = XLSX.utils.aoa_to_sheet(kpiData);\n        XLSX.utils.book_append_sheet(workbook, kpiWorksheet, 'KPIs');\n      }\n\n      // Planilha de Transações\n      if (includeTransactions && data.transactions.length > 0) {\n        const transactionData = [\n          ['Data', 'Descrição', 'Categoria', 'Tipo', 'Valor', 'Status'],\n          ...data.transactions.map(transaction => [\n            new Date(transaction.date).toLocaleDateString('pt-BR'),\n            transaction.description,\n            transaction.category,\n            transaction.type === 'income' ? 'Entrada' : 'Saída',\n            transaction.amount,\n            transaction.status === 'completed' ? 'Concluída' : 'Pendente'\n          ])\n        ];\n\n        const transactionWorksheet = XLSX.utils.aoa_to_sheet(transactionData);\n        XLSX.utils.book_append_sheet(workbook, transactionWorksheet, 'Transações');\n      }\n\n      // Planilha de Contas a Pagar\n      if (includeAccountsPayable && data.accountsPayable.length > 0) {\n        const accountsData = [\n          ['Vencimento', 'Descrição', 'Categoria', 'Valor', 'Status'],\n          ...data.accountsPayable.map(account => [\n            new Date(account.dueDate).toLocaleDateString('pt-BR'),\n            account.description,\n            account.category,\n            account.amount,\n            account.status === 'pending' ? 'Pendente' : \n            account.status === 'paid' ? 'Paga' : 'Vencida'\n          ])\n        ];\n\n        const accountsWorksheet = XLSX.utils.aoa_to_sheet(accountsData);\n        XLSX.utils.book_append_sheet(workbook, accountsWorksheet, 'Contas a Pagar');\n      }\n\n      XLSX.writeFile(workbook, `${fileName}.xlsx`);\n    } catch (error) {\n      console.error('Erro ao exportar Excel:', error);\n      throw new Error('Falha ao gerar arquivo Excel');\n    }\n  }\n\n  /**\n   * Adiciona gráficos ao PDF através de captura de tela\n   */\n  private async addChartsToPDF(pdf: jsPDF, yPosition: number): Promise<void> {\n    try {\n      const chartsContainer = document.querySelector('[data-charts-container]');\n      if (!chartsContainer) return;\n\n      const canvas = await html2canvas(chartsContainer as HTMLElement, {\n        scale: 1,\n        useCORS: true,\n        allowTaint: true,\n        backgroundColor: '#ffffff'\n      });\n\n      const imgData = canvas.toDataURL('image/png');\n      const imgWidth = 170; // Largura da imagem no PDF\n      const imgHeight = (canvas.height * imgWidth) / canvas.width;\n\n      pdf.addImage(imgData, 'PNG', 20, yPosition, imgWidth, imgHeight);\n    } catch (error) {\n      console.warn('Não foi possível capturar os gráficos:', error);\n    }\n  }\n\n  /**\n   * Formata valores monetários\n   */\n  private formatCurrency(value: number): string {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(value);\n  }\n\n  /**\n   * Prepara dados para exportação\n   */\n  prepareExportData(\n    kpis: typeof import('@/utils/mockData').mockKPIs,\n    transactions: Transaction[],\n    accountsPayable: AccountPayable[],\n    period: string = 'Último mês'\n  ): ExportData {\n    return {\n      kpis,\n      transactions,\n      accountsPayable,\n      period,\n      generatedAt: new Date().toLocaleString('pt-BR')\n    };\n  }\n\n  /**\n   * Exporta dados com cache inteligente\n   */\n  async exportWithCache(\n    data: ExportData, \n    options: ExportOptions = {}\n  ): Promise<void> {\n    const cacheKey = cacheService.generateKey('export', {\n      format: options.format || 'pdf',\n      includeCharts: options.includeCharts,\n      includeTransactions: options.includeTransactions,\n      includeAccountsPayable: options.includeAccountsPayable,\n      includeKPIs: options.includeKPIs,\n      dataHash: this.generateDataHash(data)\n    });\n\n    // Verifica se já existe no cache\n    const cachedResult = cacheService.get<Blob>(cacheKey);\n    if (cachedResult) {\n      this.downloadBlob(cachedResult, options.fileName || 'cached-export');\n      return;\n    }\n\n    // Se não está no cache, gera novo export\n    if (options.format === 'excel') {\n      const blob = await this.generateExcelBlob(data, options);\n      cacheService.set(cacheKey, blob);\n      this.downloadBlob(blob, options.fileName || 'export.xlsx');\n    } else {\n      // Para PDF, não fazemos cache do blob pois é mais complexo\n      await this.exportToPDF(data, options);\n    }\n  }\n\n  /**\n   * Gera hash dos dados para identificar mudanças\n   */\n  private generateDataHash(data: ExportData): string {\n    const dataString = JSON.stringify({\n      kpisCount: Object.keys(data.kpis).length,\n      transactionsCount: data.transactions.length,\n      accountsPayableCount: data.accountsPayable.length,\n      period: data.period\n    });\n    \n    // Hash simples baseado no conteúdo\n    let hash = 0;\n    for (let i = 0; i < dataString.length; i++) {\n      const char = dataString.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash.toString();\n  }\n\n  /**\n   * Gera blob do Excel para cache\n   */\n  private async generateExcelBlob(data: ExportData, options: ExportOptions): Promise<Blob> {\n    const workbook = XLSX.utils.book_new();\n\n    if (options.includeKPIs !== false) {\n      const kpiData = [\n        ['Métrica', 'Valor'],\n        ['Receita Total', this.formatCurrency(data.kpis.totalRevenue)],\n        ['Despesas Totais', this.formatCurrency(data.kpis.totalExpenses)],\n        ['Lucro Líquido', this.formatCurrency(data.kpis.netProfit)],\n        ['Contas a Pagar', this.formatCurrency(data.kpis.accountsPayable)],\n        ['Contas Vencidas', this.formatCurrency(data.kpis.overdueAccounts)]\n      ];\n      \n      const kpiWorksheet = XLSX.utils.aoa_to_sheet(kpiData);\n      XLSX.utils.book_append_sheet(workbook, kpiWorksheet, 'KPIs');\n    }\n\n    if (options.includeTransactions !== false && data.transactions.length > 0) {\n      const transactionData = [\n        ['Data', 'Descrição', 'Categoria', 'Tipo', 'Valor'],\n        ...data.transactions.map(t => [\n          new Date(t.date).toLocaleDateString('pt-BR'),\n          t.description,\n          t.category,\n          t.type === 'income' ? 'Receita' : 'Despesa',\n          this.formatCurrency(t.amount)\n        ])\n      ];\n      \n      const transactionWorksheet = XLSX.utils.aoa_to_sheet(transactionData);\n      XLSX.utils.book_append_sheet(workbook, transactionWorksheet, 'Transações');\n    }\n\n    if (options.includeAccountsPayable !== false && data.accountsPayable.length > 0) {\n      const accountsData = [\n        ['Descrição', 'Valor', 'Data de Vencimento', 'Status'],\n        ...data.accountsPayable.map(a => [\n          a.description,\n          this.formatCurrency(a.amount),\n          new Date(a.dueDate).toLocaleDateString('pt-BR'),\n          a.status === 'pending' ? 'Pendente' : a.status === 'paid' ? 'Pago' : 'Vencido'\n        ])\n      ];\n      \n      const accountsWorksheet = XLSX.utils.aoa_to_sheet(accountsData);\n      XLSX.utils.book_append_sheet(workbook, accountsWorksheet, 'Contas a Pagar');\n    }\n\n    const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n    return new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n  }\n\n  /**\n   * Faz download de um blob\n   */\n  private downloadBlob(blob: Blob, fileName: string): void {\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = fileName;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Exporta dados para CSV\n   */\n  async exportToCSV(data: ExportData, options: ExportOptions = {}): Promise<void> {\n    const {\n      includeTransactions = true,\n      includeAccountsPayable = true,\n      includeKPIs = true,\n      fileName = `finthrix-dados-${new Date().toISOString().split('T')[0]}`,\n      csvOptions = {}\n    } = options;\n\n    const {\n      delimiter = ',',\n      includeHeaders = true,\n      encoding = 'utf-8'\n    } = csvOptions;\n\n    try {\n      let csvContent = '';\n\n      // Adicionar metadados\n      if (includeHeaders) {\n        csvContent += `# FinThrix - Exportação de Dados\\n`;\n        csvContent += `# Período: ${data.period}\\n`;\n        csvContent += `# Gerado em: ${data.generatedAt}\\n`;\n        csvContent += `\\n`;\n      }\n\n      // KPIs\n      if (includeKPIs) {\n        if (includeHeaders) {\n          csvContent += `# INDICADORES (KPIs)\\n`;\n          csvContent += `Indicador${delimiter}Valor\\n`;\n        }\n        \n        csvContent += `Receita Total${delimiter}${this.formatCurrency(data.kpis.totalRevenue)}\\n`;\n        csvContent += `Despesas Totais${delimiter}${this.formatCurrency(data.kpis.totalExpenses)}\\n`;\n        csvContent += `Lucro Líquido${delimiter}${this.formatCurrency(data.kpis.netProfit)}\\n`;\n        csvContent += `Contas a Pagar${delimiter}${this.formatCurrency(data.kpis.accountsPayable)}\\n`;\n        csvContent += `Contas Vencidas${delimiter}${this.formatCurrency(data.kpis.overdueAccounts)}\\n`;\n        csvContent += `\\n`;\n      }\n\n      // Transações\n      if (includeTransactions && data.transactions.length > 0) {\n        if (includeHeaders) {\n          csvContent += `# TRANSAÇÕES\\n`;\n          csvContent += `Data${delimiter}Descrição${delimiter}Categoria${delimiter}Tipo${delimiter}Valor\\n`;\n        }\n        \n        data.transactions.forEach(transaction => {\n          const date = new Date(transaction.date).toLocaleDateString('pt-BR');\n          const type = transaction.type === 'income' ? 'Receita' : 'Despesa';\n          const amount = this.formatCurrency(transaction.amount);\n          \n          csvContent += `${date}${delimiter}\"${transaction.description}\"${delimiter}${transaction.category}${delimiter}${type}${delimiter}${amount}\\n`;\n        });\n        csvContent += `\\n`;\n      }\n\n      // Contas a Pagar\n      if (includeAccountsPayable && data.accountsPayable.length > 0) {\n        if (includeHeaders) {\n          csvContent += `# CONTAS A PAGAR\\n`;\n          csvContent += `Descrição${delimiter}Valor${delimiter}Data de Vencimento${delimiter}Status\\n`;\n        }\n        \n        data.accountsPayable.forEach(account => {\n          const dueDate = new Date(account.dueDate).toLocaleDateString('pt-BR');\n          const status = account.status === 'pending' ? 'Pendente' : \n                        account.status === 'paid' ? 'Pago' : 'Vencido';\n          const amount = this.formatCurrency(account.amount);\n          \n          csvContent += `\"${account.description}\"${delimiter}${amount}${delimiter}${dueDate}${delimiter}${status}\\n`;\n        });\n      }\n\n      // Criar e baixar arquivo\n      const blob = new Blob([csvContent], { \n        type: `text/csv;charset=${encoding}` \n      });\n      \n      this.downloadBlob(blob, `${fileName}.csv`);\n    } catch (error) {\n      console.error('Erro ao exportar CSV:', error);\n      throw new Error('Falha na exportação para CSV');\n    }\n  }\n\n  /**\n   * Exporta dados para JSON\n   */\n  async exportToJSON(data: ExportData, options: ExportOptions = {}): Promise<void> {\n    const {\n      includeTransactions = true,\n      includeAccountsPayable = true,\n      includeKPIs = true,\n      fileName = `finthrix-dados-${new Date().toISOString().split('T')[0]}`,\n      jsonOptions = {}\n    } = options;\n\n    const {\n      pretty = true,\n      includeMetadata = true\n    } = jsonOptions;\n\n    try {\n      const exportData: any = {};\n\n      // Metadados\n      if (includeMetadata) {\n        exportData.metadata = {\n          exportedAt: new Date().toISOString(),\n          period: data.period,\n          generatedAt: data.generatedAt,\n          version: '1.0',\n          source: 'FinThrix Dashboard'\n        };\n      }\n\n      // KPIs\n      if (includeKPIs) {\n        exportData.kpis = {\n          totalRevenue: {\n            value: data.kpis.totalRevenue,\n            formatted: this.formatCurrency(data.kpis.totalRevenue),\n            description: 'Receita total do período'\n          },\n          totalExpenses: {\n            value: data.kpis.totalExpenses,\n            formatted: this.formatCurrency(data.kpis.totalExpenses),\n            description: 'Despesas totais do período'\n          },\n          netProfit: {\n            value: data.kpis.netProfit,\n            formatted: this.formatCurrency(data.kpis.netProfit),\n            description: 'Lucro líquido do período'\n          },\n          accountsPayable: {\n            value: data.kpis.accountsPayable,\n            formatted: this.formatCurrency(data.kpis.accountsPayable),\n            description: 'Total de contas a pagar'\n          },\n          overdueAccounts: {\n            value: data.kpis.overdueAccounts,\n            formatted: this.formatCurrency(data.kpis.overdueAccounts),\n            description: 'Total de contas vencidas'\n          }\n        };\n      }\n\n      // Transações\n      if (includeTransactions && data.transactions.length > 0) {\n        exportData.transactions = data.transactions.map(transaction => ({\n          id: transaction.id,\n          date: transaction.date,\n          dateFormatted: new Date(transaction.date).toLocaleDateString('pt-BR'),\n          description: transaction.description,\n          category: transaction.category,\n          type: transaction.type,\n          typeLabel: transaction.type === 'income' ? 'Receita' : 'Despesa',\n          amount: transaction.amount,\n          amountFormatted: this.formatCurrency(transaction.amount)\n        }));\n      }\n\n      // Contas a Pagar\n      if (includeAccountsPayable && data.accountsPayable.length > 0) {\n        exportData.accountsPayable = data.accountsPayable.map(account => ({\n          id: account.id,\n          description: account.description,\n          amount: account.amount,\n          amountFormatted: this.formatCurrency(account.amount),\n          dueDate: account.dueDate,\n          dueDateFormatted: new Date(account.dueDate).toLocaleDateString('pt-BR'),\n          status: account.status,\n          statusLabel: account.status === 'pending' ? 'Pendente' : \n                      account.status === 'paid' ? 'Pago' : 'Vencido',\n          isOverdue: new Date(account.dueDate) < new Date() && account.status !== 'paid'\n        }));\n      }\n\n      // Estatísticas resumidas\n      if (includeMetadata) {\n        exportData.summary = {\n          totalTransactions: data.transactions.length,\n          totalAccountsPayable: data.accountsPayable.length,\n          overdueAccountsCount: data.accountsPayable.filter(a => \n            new Date(a.dueDate) < new Date() && a.status !== 'paid'\n          ).length,\n          incomeTransactions: data.transactions.filter(t => t.type === 'income').length,\n          expenseTransactions: data.transactions.filter(t => t.type === 'expense').length\n        };\n      }\n\n      // Converter para JSON\n      const jsonString = pretty \n        ? JSON.stringify(exportData, null, 2)\n        : JSON.stringify(exportData);\n\n      // Criar e baixar arquivo\n      const blob = new Blob([jsonString], { \n        type: 'application/json;charset=utf-8' \n      });\n      \n      this.downloadBlob(blob, `${fileName}.json`);\n    } catch (error) {\n      console.error('Erro ao exportar JSON:', error);\n      throw new Error('Falha na exportação para JSON');\n    }\n  }\n\n  /**\n   * Método principal de exportação que coordena todos os formatos\n   */\n  async export(data: ExportData, options: ExportOptions): Promise<void> {\n    try {\n      switch (options.format) {\n        case 'pdf':\n          await this.exportToPDF(data, options);\n          break;\n        case 'excel':\n          await this.exportToExcel(data, options);\n          break;\n        case 'csv':\n          await this.exportToCSV(data, options);\n          break;\n        case 'json':\n          await this.exportToJSON(data, options);\n          break;\n        default:\n          throw new Error(`Formato de exportação não suportado: ${options.format}`);\n      }\n    } catch (error) {\n      console.error('Erro na exportação:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Limpa cache de exportações\n   */\n  clearExportCache(): void {\n    cacheService.clear();\n  }\n\n  /**\n   * Retorna estatísticas do cache\n   */\n  getCacheStats() {\n    return cacheService.getStats();\n  }\n}\n\nexport const exportService = new ExportService();\nexport default exportService;","export interface PDFTemplate {\n  id: string;\n  name: string;\n  description: string;\n  preview?: string;\n  config: PDFTemplateConfig;\n}\n\nexport interface PDFTemplateConfig {\n  // Layout\n  orientation: 'portrait' | 'landscape';\n  format: 'a4' | 'a3' | 'letter' | 'legal';\n  margins: {\n    top: number;\n    right: number;\n    bottom: number;\n    left: number;\n  };\n  \n  // Header\n  header: {\n    enabled: boolean;\n    height: number;\n    showLogo: boolean;\n    showTitle: boolean;\n    showDate: boolean;\n    backgroundColor: string;\n    textColor: string;\n    fontSize: number;\n  };\n  \n  // Footer\n  footer: {\n    enabled: boolean;\n    height: number;\n    showPageNumbers: boolean;\n    showCompanyInfo: boolean;\n    backgroundColor: string;\n    textColor: string;\n    fontSize: number;\n  };\n  \n  // Content\n  content: {\n    showKPIs: boolean;\n    showCharts: boolean;\n    chartsPerRow: 1 | 2;\n    chartHeight: number;\n    showDataTable: boolean;\n    fontSize: number;\n    lineHeight: number;\n  };\n  \n  // Colors and Styling\n  colors: {\n    primary: string;\n    secondary: string;\n    accent: string;\n    text: string;\n    background: string;\n    border: string;\n  };\n  \n  // Branding\n  branding: {\n    companyName: string;\n    companyLogo?: string;\n    companyAddress?: string;\n    companyPhone?: string;\n    companyEmail?: string;\n  };\n}\n\nexport const DEFAULT_PDF_TEMPLATES: PDFTemplate[] = [\n  {\n    id: 'executive',\n    name: 'Executivo',\n    description: 'Template limpo e profissional para relatórios executivos',\n    config: {\n      orientation: 'portrait',\n      format: 'a4',\n      margins: { top: 20, right: 20, bottom: 20, left: 20 },\n      header: {\n        enabled: true,\n        height: 60,\n        showLogo: true,\n        showTitle: true,\n        showDate: true,\n        backgroundColor: '#1f2937',\n        textColor: '#ffffff',\n        fontSize: 16\n      },\n      footer: {\n        enabled: true,\n        height: 40,\n        showPageNumbers: true,\n        showCompanyInfo: true,\n        backgroundColor: '#f9fafb',\n        textColor: '#6b7280',\n        fontSize: 10\n      },\n      content: {\n        showKPIs: true,\n        showCharts: true,\n        chartsPerRow: 2,\n        chartHeight: 200,\n        showDataTable: false,\n        fontSize: 12,\n        lineHeight: 1.5\n      },\n      colors: {\n        primary: '#3b82f6',\n        secondary: '#64748b',\n        accent: '#10b981',\n        text: '#1f2937',\n        background: '#ffffff',\n        border: '#e5e7eb'\n      },\n      branding: {\n        companyName: 'FinThrix',\n        companyAddress: 'São Paulo, SP',\n        companyEmail: 'contato@finthrix.com'\n      }\n    }\n  },\n  {\n    id: 'detailed',\n    name: 'Detalhado',\n    description: 'Template completo com todos os dados e gráficos',\n    config: {\n      orientation: 'landscape',\n      format: 'a4',\n      margins: { top: 15, right: 15, bottom: 15, left: 15 },\n      header: {\n        enabled: true,\n        height: 50,\n        showLogo: true,\n        showTitle: true,\n        showDate: true,\n        backgroundColor: '#059669',\n        textColor: '#ffffff',\n        fontSize: 14\n      },\n      footer: {\n        enabled: true,\n        height: 30,\n        showPageNumbers: true,\n        showCompanyInfo: false,\n        backgroundColor: '#ffffff',\n        textColor: '#374151',\n        fontSize: 9\n      },\n      content: {\n        showKPIs: true,\n        showCharts: true,\n        chartsPerRow: 2,\n        chartHeight: 180,\n        showDataTable: true,\n        fontSize: 10,\n        lineHeight: 1.4\n      },\n      colors: {\n        primary: '#059669',\n        secondary: '#6b7280',\n        accent: '#f59e0b',\n        text: '#374151',\n        background: '#ffffff',\n        border: '#d1d5db'\n      },\n      branding: {\n        companyName: 'FinThrix Analytics',\n        companyAddress: 'São Paulo, SP - Brasil',\n        companyPhone: '+55 (11) 9999-9999',\n        companyEmail: 'analytics@finthrix.com'\n      }\n    }\n  },\n  {\n    id: 'minimal',\n    name: 'Minimalista',\n    description: 'Template simples focado apenas nos dados essenciais',\n    config: {\n      orientation: 'portrait',\n      format: 'a4',\n      margins: { top: 30, right: 30, bottom: 30, left: 30 },\n      header: {\n        enabled: false,\n        height: 0,\n        showLogo: false,\n        showTitle: false,\n        showDate: false,\n        backgroundColor: '#ffffff',\n        textColor: '#000000',\n        fontSize: 12\n      },\n      footer: {\n        enabled: false,\n        height: 0,\n        showPageNumbers: false,\n        showCompanyInfo: false,\n        backgroundColor: '#ffffff',\n        textColor: '#6b7280',\n        fontSize: 8\n      },\n      content: {\n        showKPIs: true,\n        showCharts: true,\n        chartsPerRow: 1,\n        chartHeight: 250,\n        showDataTable: false,\n        fontSize: 14,\n        lineHeight: 1.6\n      },\n      colors: {\n        primary: '#000000',\n        secondary: '#6b7280',\n        accent: '#3b82f6',\n        text: '#000000',\n        background: '#ffffff',\n        border: '#e5e7eb'\n      },\n      branding: {\n        companyName: 'Dashboard Report'\n      }\n    }\n  }\n];","import { PDFTemplate, DEFAULT_PDF_TEMPLATES } from '@/types/pdfTemplates';\n\nclass PDFTemplateService {\n  private templates: PDFTemplate[] = [...DEFAULT_PDF_TEMPLATES];\n  private storageKey = 'finthrix_pdf_templates';\n\n  constructor() {\n    this.loadTemplatesFromStorage();\n  }\n\n  /**\n   * Carrega templates do localStorage\n   */\n  private loadTemplatesFromStorage(): void {\n    try {\n      const stored = localStorage.getItem(this.storageKey);\n      if (stored) {\n        const customTemplates = JSON.parse(stored);\n        // Mescla templates padrão com customizados\n        this.templates = [\n          ...DEFAULT_PDF_TEMPLATES,\n          ...customTemplates.filter((t: PDFTemplate) => \n            !DEFAULT_PDF_TEMPLATES.some(dt => dt.id === t.id)\n          )\n        ];\n      }\n    } catch (error) {\n      console.warn('Erro ao carregar templates do localStorage:', error);\n    }\n  }\n\n  /**\n   * Salva templates customizados no localStorage\n   */\n  private saveTemplatesToStorage(): void {\n    try {\n      const customTemplates = this.templates.filter(t => \n        !DEFAULT_PDF_TEMPLATES.some(dt => dt.id === t.id)\n      );\n      localStorage.setItem(this.storageKey, JSON.stringify(customTemplates));\n    } catch (error) {\n      console.warn('Erro ao salvar templates no localStorage:', error);\n    }\n  }\n\n  /**\n   * Retorna todos os templates disponíveis\n   */\n  getAllTemplates(): PDFTemplate[] {\n    return [...this.templates];\n  }\n\n  /**\n   * Retorna um template por ID\n   */\n  getTemplateById(id: string): PDFTemplate | undefined {\n    return this.templates.find(t => t.id === id);\n  }\n\n  /**\n   * Cria um novo template customizado\n   */\n  createTemplate(template: Omit<PDFTemplate, 'id'>): PDFTemplate {\n    const newTemplate: PDFTemplate = {\n      ...template,\n      id: `custom_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    };\n\n    this.templates.push(newTemplate);\n    this.saveTemplatesToStorage();\n    \n    return newTemplate;\n  }\n\n  /**\n   * Atualiza um template existente\n   */\n  updateTemplate(id: string, updates: Partial<PDFTemplate>): PDFTemplate | null {\n    const index = this.templates.findIndex(t => t.id === id);\n    \n    if (index === -1) {\n      return null;\n    }\n\n    // Não permite editar templates padrão\n    const isDefaultTemplate = DEFAULT_PDF_TEMPLATES.some(dt => dt.id === id);\n    if (isDefaultTemplate) {\n      throw new Error('Templates padrão não podem ser editados');\n    }\n\n    this.templates[index] = { ...this.templates[index], ...updates };\n    this.saveTemplatesToStorage();\n    \n    return this.templates[index];\n  }\n\n  /**\n   * Remove um template customizado\n   */\n  deleteTemplate(id: string): boolean {\n    // Não permite deletar templates padrão\n    const isDefaultTemplate = DEFAULT_PDF_TEMPLATES.some(dt => dt.id === id);\n    if (isDefaultTemplate) {\n      throw new Error('Templates padrão não podem ser removidos');\n    }\n\n    const index = this.templates.findIndex(t => t.id === id);\n    \n    if (index === -1) {\n      return false;\n    }\n\n    this.templates.splice(index, 1);\n    this.saveTemplatesToStorage();\n    \n    return true;\n  }\n\n  /**\n   * Duplica um template existente\n   */\n  duplicateTemplate(id: string, newName?: string): PDFTemplate | null {\n    const originalTemplate = this.getTemplateById(id);\n    \n    if (!originalTemplate) {\n      return null;\n    }\n\n    const duplicatedTemplate = this.createTemplate({\n      name: newName || `${originalTemplate.name} (Cópia)`,\n      description: `Cópia de ${originalTemplate.description}`,\n      preview: originalTemplate.preview,\n      config: JSON.parse(JSON.stringify(originalTemplate.config)) // Deep clone\n    });\n\n    return duplicatedTemplate;\n  }\n\n  /**\n   * Valida se um template está correto\n   */\n  validateTemplate(template: PDFTemplate): { isValid: boolean; errors: string[] } {\n    const errors: string[] = [];\n\n    if (!template.name || template.name.trim().length === 0) {\n      errors.push('Nome do template é obrigatório');\n    }\n\n    if (!template.config) {\n      errors.push('Configuração do template é obrigatória');\n      return { isValid: false, errors };\n    }\n\n    const { config } = template;\n\n    // Validar margens\n    if (config.margins.top < 0 || config.margins.right < 0 || \n        config.margins.bottom < 0 || config.margins.left < 0) {\n      errors.push('Margens não podem ser negativas');\n    }\n\n    // Validar cores\n    const colorRegex = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    Object.entries(config.colors).forEach(([key, color]) => {\n      if (!colorRegex.test(color)) {\n        errors.push(`Cor ${key} inválida: ${color}`);\n      }\n    });\n\n    // Validar tamanhos de fonte\n    if (config.header.fontSize < 8 || config.header.fontSize > 24) {\n      errors.push('Tamanho da fonte do cabeçalho deve estar entre 8 e 24');\n    }\n\n    if (config.footer.fontSize < 6 || config.footer.fontSize > 16) {\n      errors.push('Tamanho da fonte do rodapé deve estar entre 6 e 16');\n    }\n\n    if (config.content.fontSize < 8 || config.content.fontSize > 20) {\n      errors.push('Tamanho da fonte do conteúdo deve estar entre 8 e 20');\n    }\n\n    return { isValid: errors.length === 0, errors };\n  }\n\n  /**\n   * Exporta templates para JSON\n   */\n  exportTemplates(templateIds?: string[]): string {\n    const templatesToExport = templateIds \n      ? this.templates.filter(t => templateIds.includes(t.id))\n      : this.templates.filter(t => !DEFAULT_PDF_TEMPLATES.some(dt => dt.id === t.id));\n\n    return JSON.stringify(templatesToExport, null, 2);\n  }\n\n  /**\n   * Importa templates de JSON\n   */\n  importTemplates(jsonData: string): { success: number; errors: string[] } {\n    const errors: string[] = [];\n    let success = 0;\n\n    try {\n      const templates: PDFTemplate[] = JSON.parse(jsonData);\n      \n      if (!Array.isArray(templates)) {\n        throw new Error('Dados devem ser um array de templates');\n      }\n\n      templates.forEach((template, index) => {\n        try {\n          const validation = this.validateTemplate(template);\n          \n          if (!validation.isValid) {\n            errors.push(`Template ${index + 1}: ${validation.errors.join(', ')}`);\n            return;\n          }\n\n          // Gerar novo ID para evitar conflitos\n          const newTemplate = {\n            ...template,\n            id: `imported_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n          };\n\n          this.templates.push(newTemplate);\n          success++;\n        } catch (error) {\n          errors.push(`Template ${index + 1}: ${error instanceof Error ? error.message : 'Erro desconhecido'}`);\n        }\n      });\n\n      if (success > 0) {\n        this.saveTemplatesToStorage();\n      }\n    } catch (error) {\n      errors.push(`Erro ao processar JSON: ${error instanceof Error ? error.message : 'Erro desconhecido'}`);\n    }\n\n    return { success, errors };\n  }\n\n  /**\n   * Reseta para templates padrão\n   */\n  resetToDefaults(): void {\n    this.templates = [...DEFAULT_PDF_TEMPLATES];\n    localStorage.removeItem(this.storageKey);\n  }\n}\n\n// Singleton instance\nexport const pdfTemplateService = new PDFTemplateService();\nexport default pdfTemplateService;","import React, { useState, useEffect } from 'react';\nimport { PDFTemplate } from '@/types/pdfTemplates';\nimport { pdfTemplateService } from '@/services/pdfTemplateService';\nimport { \n  FileText, \n  Copy, \n  Trash2, \n  Download, \n  Upload,\n  Check\n} from 'lucide-react';\n\ninterface PDFTemplateSelectorProps {\n  selectedTemplateId?: string;\n  onTemplateSelect: (template: PDFTemplate) => void;\n  onClose?: () => void;\n}\n\nexport const PDFTemplateSelector: React.FC<PDFTemplateSelectorProps> = ({\n  selectedTemplateId,\n  onTemplateSelect,\n  onClose\n}) => {\n  const [templates, setTemplates] = useState<PDFTemplate[]>([]);\n  const [selectedTemplate, setSelectedTemplate] = useState<PDFTemplate | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadTemplates();\n  }, []);\n\n  useEffect(() => {\n    if (selectedTemplateId) {\n      const template = templates.find(t => t.id === selectedTemplateId);\n      if (template) {\n        setSelectedTemplate(template);\n      }\n    }\n  }, [selectedTemplateId, templates]);\n\n  const loadTemplates = () => {\n    setIsLoading(true);\n    try {\n      const allTemplates = pdfTemplateService.getAllTemplates();\n      setTemplates(allTemplates);\n    } catch (error) {\n      console.error('Erro ao carregar templates:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleTemplateSelect = (template: PDFTemplate) => {\n    setSelectedTemplate(template);\n    onTemplateSelect(template);\n  };\n\n  const handleDuplicateTemplate = async (template: PDFTemplate) => {\n    try {\n      const duplicated = pdfTemplateService.duplicateTemplate(template.id);\n      if (duplicated) {\n        loadTemplates();\n      }\n    } catch (error) {\n      console.error('Erro ao duplicar template:', error);\n    }\n  };\n\n  const handleDeleteTemplate = async (templateId: string) => {\n    if (window.confirm('Tem certeza que deseja excluir este template?')) {\n      try {\n        pdfTemplateService.deleteTemplate(templateId);\n        loadTemplates();\n        \n        // Se o template deletado estava selecionado, limpar seleção\n        if (selectedTemplate?.id === templateId) {\n          setSelectedTemplate(null);\n        }\n      } catch (error) {\n        console.error('Erro ao deletar template:', error);\n        alert('Não é possível deletar templates padrão');\n      }\n    }\n  };\n\n  const handleExportTemplates = () => {\n    try {\n      const customTemplates = templates.filter(t => \n        !t.id.startsWith('executive') && \n        !t.id.startsWith('detailed') && \n        !t.id.startsWith('minimal')\n      );\n      \n      if (customTemplates.length === 0) {\n        alert('Nenhum template customizado para exportar');\n        return;\n      }\n\n      const jsonData = pdfTemplateService.exportTemplates(customTemplates.map(t => t.id));\n      const blob = new Blob([jsonData], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      \n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `finthrix-templates-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Erro ao exportar templates:', error);\n    }\n  };\n\n  const handleImportTemplates = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const jsonData = e.target?.result as string;\n        const result = pdfTemplateService.importTemplates(jsonData);\n        \n        if (result.success > 0) {\n          alert(`${result.success} template(s) importado(s) com sucesso!`);\n          loadTemplates();\n        }\n        \n        if (result.errors.length > 0) {\n          alert(`Erros encontrados:\\n${result.errors.join('\\n')}`);\n        }\n      } catch (error) {\n        alert('Erro ao importar templates. Verifique o formato do arquivo.');\n      }\n    };\n    reader.readAsText(file);\n    \n    // Reset input\n    event.target.value = '';\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg max-w-4xl mx-auto\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n        <div className=\"flex items-center space-x-3\">\n          <FileText className=\"h-6 w-6 text-blue-600\" />\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            Selecionar Template PDF\n          </h2>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {/* Import/Export */}\n          <label className=\"cursor-pointer p-2 text-gray-500 hover:text-blue-600 rounded-lg hover:bg-gray-100\">\n            <Upload className=\"h-5 w-5\" />\n            <input\n              type=\"file\"\n              accept=\".json\"\n              onChange={handleImportTemplates}\n              className=\"hidden\"\n            />\n          </label>\n          \n          <button\n            onClick={handleExportTemplates}\n            className=\"p-2 text-gray-500 hover:text-blue-600 rounded-lg hover:bg-gray-100\"\n            title=\"Exportar templates customizados\"\n          >\n            <Download className=\"h-5 w-5\" />\n          </button>\n          \n          {onClose && (\n            <button\n              onClick={onClose}\n              className=\"p-2 text-gray-500 hover:text-red-600 rounded-lg hover:bg-gray-100\"\n            >\n              ✕\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Templates Grid */}\n      <div className=\"p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {templates.map((template) => (\n            <div\n              key={template.id}\n              className={`relative border-2 rounded-lg p-4 cursor-pointer transition-all ${\n                selectedTemplate?.id === template.id\n                  ? 'border-blue-500 bg-blue-50'\n                  : 'border-gray-200 hover:border-gray-300'\n              }`}\n              onClick={() => handleTemplateSelect(template)}\n            >\n              {/* Selection Indicator */}\n              {selectedTemplate?.id === template.id && (\n                <div className=\"absolute top-2 right-2 bg-blue-500 text-white rounded-full p-1\">\n                  <Check className=\"h-4 w-4\" />\n                </div>\n              )}\n\n              {/* Template Preview */}\n              <div className=\"mb-3\">\n                <div \n                  className=\"w-full h-32 rounded border-2 border-dashed border-gray-300 flex items-center justify-center\"\n                  style={{ backgroundColor: template.config.colors.background }}\n                >\n                  <div className=\"text-center\">\n                    <div \n                      className=\"text-xs font-medium mb-1\"\n                      style={{ color: template.config.colors.primary }}\n                    >\n                      {template.config.orientation === 'landscape' ? '📄' : '📋'}\n                    </div>\n                    <div className=\"text-xs text-gray-500\">\n                      {template.config.format.toUpperCase()}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Template Info */}\n              <div className=\"mb-3\">\n                <h3 className=\"font-medium text-gray-900 mb-1\">\n                  {template.name}\n                </h3>\n                <p className=\"text-sm text-gray-600 line-clamp-2\">\n                  {template.description}\n                </p>\n              </div>\n\n              {/* Template Features */}\n              <div className=\"flex flex-wrap gap-1 mb-3\">\n                {template.config.header.enabled && (\n                  <span className=\"text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded\">\n                    Cabeçalho\n                  </span>\n                )}\n                {template.config.footer.enabled && (\n                  <span className=\"text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded\">\n                    Rodapé\n                  </span>\n                )}\n                {template.config.content.showCharts && (\n                  <span className=\"text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded\">\n                    Gráficos\n                  </span>\n                )}\n                {template.config.content.showDataTable && (\n                  <span className=\"text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded\">\n                    Tabelas\n                  </span>\n                )}\n              </div>\n\n              {/* Actions */}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-1\">\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleDuplicateTemplate(template);\n                    }}\n                    className=\"p-1 text-gray-400 hover:text-blue-600 rounded\"\n                    title=\"Duplicar template\"\n                  >\n                    <Copy className=\"h-4 w-4\" />\n                  </button>\n                  \n                  {!template.id.startsWith('executive') && \n                   !template.id.startsWith('detailed') && \n                   !template.id.startsWith('minimal') && (\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleDeleteTemplate(template.id);\n                      }}\n                      className=\"p-1 text-gray-400 hover:text-red-600 rounded\"\n                      title=\"Excluir template\"\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </button>\n                  )}\n                </div>\n                \n                <span className=\"text-xs text-gray-500\">\n                  {template.config.orientation} • {template.config.format}\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div className=\"flex items-center justify-between p-6 border-t border-gray-200 bg-gray-50\">\n        <div className=\"text-sm text-gray-600\">\n          {templates.length} template(s) disponível(is)\n        </div>\n        \n        <div className=\"flex items-center space-x-3\">\n          {onClose && (\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n            >\n              Cancelar\n            </button>\n          )}\n          \n          <button\n            onClick={() => selectedTemplate && onTemplateSelect(selectedTemplate)}\n            disabled={!selectedTemplate}\n            className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            Usar Template\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PDFTemplateSelector;","import React, { useState } from 'react';\nimport { PDFTemplate } from '@/types/pdfTemplates';\nimport { pdfTemplateService } from '@/services/pdfTemplateService';\nimport { \n  Save, \n  RotateCcw, \n  Eye, \n  Palette, \n  Layout, \n  Image,\n  Settings,\n  FileText,\n  BarChart3,\n  Table\n} from 'lucide-react';\n\ninterface PDFTemplateCustomizerProps {\n  template: PDFTemplate;\n  onSave: (template: PDFTemplate) => void;\n  onCancel: () => void;\n}\n\nexport const PDFTemplateCustomizer: React.FC<PDFTemplateCustomizerProps> = ({\n  template,\n  onSave,\n  onCancel\n}) => {\n  const [editedTemplate, setEditedTemplate] = useState<PDFTemplate>({ ...template });\n  const [activeTab, setActiveTab] = useState<'layout' | 'content' | 'style' | 'branding'>('layout');\n  const [previewMode, setPreviewMode] = useState(false);\n\n  const updateConfig = (path: string, value: any) => {\n    const keys = path.split('.');\n    const newConfig = { ...editedTemplate.config };\n    \n    let current: any = newConfig;\n    for (let i = 0; i < keys.length - 1; i++) {\n      current = current[keys[i]];\n    }\n    current[keys[keys.length - 1]] = value;\n    \n    setEditedTemplate({\n      ...editedTemplate,\n      config: newConfig\n    });\n  };\n\n  const handleSave = () => {\n    try {\n      let savedTemplate: PDFTemplate | null = null;\n      \n      // Se o template já existe, atualiza; senão, cria um novo\n      if (editedTemplate.id && editedTemplate.id.startsWith('custom_')) {\n        savedTemplate = pdfTemplateService.updateTemplate(editedTemplate.id, editedTemplate);\n      } else {\n        // Cria um novo template customizado\n        savedTemplate = pdfTemplateService.createTemplate({\n          name: editedTemplate.name,\n          description: editedTemplate.description,\n          preview: editedTemplate.preview,\n          config: editedTemplate.config\n        });\n      }\n      \n      if (savedTemplate) {\n        onSave(savedTemplate);\n      }\n    } catch (error) {\n      console.error('Erro ao salvar template:', error);\n      alert('Erro ao salvar template');\n    }\n  };\n\n  const handleReset = () => {\n    if (window.confirm('Descartar todas as alterações?')) {\n      setEditedTemplate({ ...template });\n    }\n  };\n\n  const tabs = [\n    { id: 'layout', label: 'Layout', icon: Layout },\n    { id: 'content', label: 'Conteúdo', icon: FileText },\n    { id: 'style', label: 'Estilo', icon: Palette },\n    { id: 'branding', label: 'Marca', icon: Image }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg max-w-6xl mx-auto\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n        <div className=\"flex items-center space-x-3\">\n          <Settings className=\"h-6 w-6 text-blue-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">\n              Customizar Template\n            </h2>\n            <p className=\"text-sm text-gray-600\">\n              {editedTemplate.name}\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-3\">\n          <button\n            onClick={() => setPreviewMode(!previewMode)}\n            className={`px-4 py-2 rounded-lg flex items-center space-x-2 ${\n              previewMode \n                ? 'bg-blue-600 text-white' \n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n            }`}\n          >\n            <Eye className=\"h-4 w-4\" />\n            <span>Preview</span>\n          </button>\n          \n          <button\n            onClick={handleReset}\n            className=\"px-4 py-2 text-gray-600 hover:text-gray-800 rounded-lg hover:bg-gray-100\"\n          >\n            <RotateCcw className=\"h-4 w-4\" />\n          </button>\n          \n          <button\n            onClick={onCancel}\n            className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n          >\n            Cancelar\n          </button>\n          \n          <button\n            onClick={handleSave}\n            className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\"\n          >\n            <Save className=\"h-4 w-4\" />\n            <span>Salvar</span>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"flex\">\n        {/* Sidebar - Tabs */}\n        <div className=\"w-64 border-r border-gray-200 bg-gray-50\">\n          <div className=\"p-4\">\n            <nav className=\"space-y-2\">\n              {tabs.map((tab) => {\n                const Icon = tab.icon;\n                return (\n                  <button\n                    key={tab.id}\n                    onClick={() => setActiveTab(tab.id as any)}\n                    className={`w-full flex items-center space-x-3 px-3 py-2 rounded-lg text-left ${\n                      activeTab === tab.id\n                        ? 'bg-blue-100 text-blue-700 border border-blue-200'\n                        : 'text-gray-700 hover:bg-gray-100'\n                    }`}\n                  >\n                    <Icon className=\"h-5 w-5\" />\n                    <span>{tab.label}</span>\n                  </button>\n                );\n              })}\n            </nav>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"flex-1\">\n          {previewMode ? (\n            /* Preview */\n            <div className=\"p-6\">\n              <div className=\"bg-gray-100 rounded-lg p-8\">\n                <div \n                  className=\"bg-white shadow-lg mx-auto rounded-lg overflow-hidden\"\n                  style={{\n                    width: editedTemplate.config.orientation === 'landscape' ? '400px' : '300px',\n                    height: editedTemplate.config.orientation === 'landscape' ? '283px' : '400px',\n                    backgroundColor: editedTemplate.config.colors.background\n                  }}\n                >\n                  {/* Header Preview */}\n                  {editedTemplate.config.header.enabled && (\n                    <div \n                      className=\"p-4 border-b\"\n                      style={{ \n                        backgroundColor: editedTemplate.config.colors.primary,\n                        color: editedTemplate.config.colors.text\n                      }}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <h3 className=\"font-bold text-sm\">\n                            {editedTemplate.config.branding.companyName || 'Empresa'}\n                          </h3>\n                          <p className=\"text-xs opacity-80\">Relatório Financeiro</p>\n                        </div>\n                        {editedTemplate.config.branding.companyLogo && (\n                          <div className=\"w-8 h-8 bg-white rounded opacity-80\"></div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Content Preview */}\n                  <div className=\"p-4 space-y-3\">\n\n                    {editedTemplate.config.content.showCharts && (\n                      <div className=\"text-xs\">\n                        <h4 className=\"font-medium mb-1 flex items-center\">\n                          <BarChart3 className=\"h-3 w-3 mr-1\" />\n                          Gráficos\n                        </h4>\n                        <div className=\"h-16 bg-gray-100 rounded flex items-center justify-center\">\n                          <BarChart3 className=\"h-6 w-6 text-gray-400\" />\n                        </div>\n                      </div>\n                    )}\n\n                    {editedTemplate.config.content.showDataTable && (\n                      <div className=\"text-xs\">\n                        <h4 className=\"font-medium mb-1 flex items-center\">\n                          <Table className=\"h-3 w-3 mr-1\" />\n                          Dados\n                        </h4>\n                        <div className=\"space-y-1\">\n                          <div className=\"h-1 bg-gray-200 rounded\"></div>\n                          <div className=\"h-1 bg-gray-200 rounded w-3/4\"></div>\n                          <div className=\"h-1 bg-gray-200 rounded w-1/2\"></div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Footer Preview */}\n                  {editedTemplate.config.footer.enabled && (\n                    <div \n                      className=\"absolute bottom-0 left-0 right-0 p-2 border-t text-xs text-center\"\n                      style={{ color: editedTemplate.config.colors.secondary }}\n                    >\n                      Página 1 • {new Date().toLocaleDateString()}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ) : (\n            /* Configuration Forms */\n            <div className=\"p-6\">\n              {activeTab === 'layout' && (\n                <div className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                      Configurações de Layout\n                    </h3>\n                    \n                    <div className=\"grid grid-cols-2 gap-6\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Formato\n                        </label>\n                        <select\n                          value={editedTemplate.config.format}\n                          onChange={(e) => updateConfig('format', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                        >\n                          <option value=\"a4\">A4</option>\n                          <option value=\"letter\">Letter</option>\n                          <option value=\"legal\">Legal</option>\n                        </select>\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Orientação\n                        </label>\n                        <select\n                          value={editedTemplate.config.orientation}\n                          onChange={(e) => updateConfig('orientation', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                        >\n                          <option value=\"portrait\">Retrato</option>\n                          <option value=\"landscape\">Paisagem</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"text-md font-medium text-gray-900 mb-3\">Margens</h4>\n                    <div className=\"grid grid-cols-4 gap-4\">\n                      {['top', 'right', 'bottom', 'left'].map((margin) => (\n                        <div key={margin}>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1 capitalize\">\n                            {margin === 'top' ? 'Superior' : \n                             margin === 'right' ? 'Direita' :\n                             margin === 'bottom' ? 'Inferior' : 'Esquerda'}\n                          </label>\n                          <input\n                            type=\"number\"\n                            value={editedTemplate.config.margins[margin as keyof typeof editedTemplate.config.margins]}\n                            onChange={(e) => updateConfig(`margins.${margin}`, parseInt(e.target.value))}\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                            min=\"0\"\n                            max=\"100\"\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {activeTab === 'content' && (\n                <div className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                      Elementos do Conteúdo\n                    </h3>\n                    \n                    <div className=\"space-y-4\">\n                      {[\n                        { key: 'showKPIs', label: 'KPIs', desc: 'Inclui indicadores chave de performance' },\n                        { key: 'showCharts', label: 'Gráficos', desc: 'Inclui visualizações gráficas dos dados' },\n                        { key: 'showDataTable', label: 'Tabela de Dados', desc: 'Inclui tabelas detalhadas com os dados' }\n                      ].map((item) => (\n                        <div key={item.key} className=\"flex items-start space-x-3 p-4 border border-gray-200 rounded-lg\">\n                          <input\n                            type=\"checkbox\"\n                            checked={editedTemplate.config.content[item.key as keyof typeof editedTemplate.config.content] as boolean}\n                            onChange={(e) => updateConfig(`content.${item.key}`, e.target.checked)}\n                            className=\"mt-1 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                          />\n                          <div>\n                            <label className=\"text-sm font-medium text-gray-900\">\n                              {item.label}\n                            </label>\n                            <p className=\"text-sm text-gray-600\">\n                              {item.desc}\n                            </p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"text-md font-medium text-gray-900 mb-3\">Cabeçalho e Rodapé</h4>\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center space-x-3\">\n                        <input\n                          type=\"checkbox\"\n                          checked={editedTemplate.config.header.enabled}\n                          onChange={(e) => updateConfig('header.enabled', e.target.checked)}\n                          className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                        />\n                        <label className=\"text-sm font-medium text-gray-900\">\n                          Incluir Cabeçalho\n                        </label>\n                      </div>\n                      \n                      <div className=\"flex items-center space-x-3\">\n                        <input\n                          type=\"checkbox\"\n                          checked={editedTemplate.config.footer.enabled}\n                          onChange={(e) => updateConfig('footer.enabled', e.target.checked)}\n                          className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                        />\n                        <label className=\"text-sm font-medium text-gray-900\">\n                          Incluir Rodapé\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {activeTab === 'style' && (\n                <div className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                      Cores e Tipografia\n                    </h3>\n                    \n                    <div className=\"grid grid-cols-2 gap-6\">\n                      <div className=\"space-y-4\">\n                        <h4 className=\"text-md font-medium text-gray-900\">Cores</h4>\n                        \n                        {[\n                          { key: 'primary', label: 'Cor Primária' },\n                          { key: 'secondary', label: 'Cor Secundária' },\n                          { key: 'accent', label: 'Cor de Destaque' },\n                          { key: 'background', label: 'Fundo' },\n                          { key: 'text', label: 'Texto' }\n                        ].map((color) => (\n                          <div key={color.key} className=\"flex items-center space-x-3\">\n                            <input\n                              type=\"color\"\n                              value={editedTemplate.config.colors[color.key as keyof typeof editedTemplate.config.colors]}\n                              onChange={(e) => updateConfig(`colors.${color.key}`, e.target.value)}\n                              className=\"w-12 h-8 border border-gray-300 rounded cursor-pointer\"\n                            />\n                            <label className=\"text-sm font-medium text-gray-700\">\n                              {color.label}\n                            </label>\n                          </div>\n                        ))}\n                      </div>\n                      \n\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {activeTab === 'branding' && (\n                <div className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                      Identidade da Marca\n                    </h3>\n                    \n                    <div className=\"space-y-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Nome da Empresa\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={editedTemplate.config.branding.companyName}\n                          onChange={(e) => updateConfig('branding.companyName', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                          placeholder=\"Digite o nome da empresa\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Logo da Empresa\n                        </label>\n                        <input\n                          type=\"url\"\n                          value={editedTemplate.config.branding.companyLogo || ''}\n                          onChange={(e) => updateConfig('branding.companyLogo', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                          placeholder=\"https://exemplo.com/logo.png\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Endereço\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={editedTemplate.config.branding.companyAddress || ''}\n                          onChange={(e) => updateConfig('branding.companyAddress', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                          placeholder=\"Endereço da empresa\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Telefone\n                        </label>\n                        <input\n                          type=\"tel\"\n                          value={editedTemplate.config.branding.companyPhone || ''}\n                          onChange={(e) => updateConfig('branding.companyPhone', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                          placeholder=\"+55 (11) 9999-9999\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Email\n                        </label>\n                        <input\n                          type=\"email\"\n                          value={editedTemplate.config.branding.companyEmail || ''}\n                          onChange={(e) => updateConfig('branding.companyEmail', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                          placeholder=\"contato@empresa.com\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PDFTemplateCustomizer;","import React, { useState } from 'react';\nimport { Download, FileText, FileSpreadsheet, Loader2, Settings } from 'lucide-react';\nimport exportService, { type ExportData, type ExportOptions } from '@/services/exportService';\nimport { PDFTemplateSelector } from './PDFTemplateSelector';\nimport { PDFTemplateCustomizer } from './PDFTemplateCustomizer';\nimport { PDFTemplate } from '@/types/pdfTemplates';\n\ninterface ExportButtonProps {\n  data: ExportData;\n  className?: string;\n  variant?: 'primary' | 'secondary' | 'outline';\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const ExportButton: React.FC<ExportButtonProps> = ({\n  data,\n  className = '',\n  variant = 'primary',\n  size = 'md'\n}) => {\n  const [isExporting, setIsExporting] = useState(false);\n  const [showOptions, setShowOptions] = useState(false);\n  const [showTemplateSelector, setShowTemplateSelector] = useState(false);\n  const [showTemplateCustomizer, setShowTemplateCustomizer] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState<PDFTemplate | null>(null);\n  const [exportOptions, setExportOptions] = useState<ExportOptions>({\n    includeCharts: true,\n    includeTransactions: true,\n    includeAccountsPayable: true,\n    includeKPIs: true,\n    format: 'pdf'\n  });\n\n  const baseClasses = 'inline-flex items-center justify-center font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';\n  \n  const variantClasses = {\n    primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',\n    secondary: 'bg-gray-600 text-white hover:bg-gray-700 focus:ring-gray-500',\n    outline: 'border border-gray-300 bg-white text-gray-700 hover:bg-gray-50 focus:ring-blue-500'\n  };\n\n  const sizeClasses = {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-sm',\n    lg: 'px-6 py-3 text-base'\n  };\n\n  const handleExport = async () => {\n    setIsExporting(true);\n    try {\n      const options: ExportOptions = {\n        ...exportOptions,\n        pdfTemplate: exportOptions.format === 'pdf' && selectedTemplate ? selectedTemplate : undefined\n      };\n\n      // Usa o método principal de exportação\n      await exportService.export(data, options);\n    } catch (error) {\n      console.error('Erro na exportação:', error);\n      alert('Erro ao exportar relatório. Tente novamente.');\n    } finally {\n      setIsExporting(false);\n      setShowOptions(false);\n    }\n  };\n\n  const handleTemplateSelect = (template: PDFTemplate) => {\n    setSelectedTemplate(template);\n    setShowTemplateSelector(false);\n  };\n\n  const handleTemplateCustomize = (template: PDFTemplate) => {\n    setSelectedTemplate(template);\n    setShowTemplateCustomizer(false);\n  };\n\n  const openTemplateSelector = () => {\n    setShowTemplateSelector(true);\n    setShowOptions(false);\n  };\n\n  const openTemplateCustomizer = () => {\n    if (selectedTemplate) {\n      setShowTemplateCustomizer(true);\n      setShowOptions(false);\n    } else {\n      // Se não há template selecionado, abrir o seletor primeiro\n      setShowTemplateSelector(true);\n      setShowOptions(false);\n    }\n  };\n\n  const toggleOption = (option: keyof ExportOptions) => {\n    setExportOptions(prev => ({\n      ...prev,\n      [option]: !prev[option]\n    }));\n  };\n\n  return (\n    <div className=\"relative\">\n      <button\n        onClick={() => setShowOptions(!showOptions)}\n        disabled={isExporting}\n        className={`${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`}\n        aria-expanded={showOptions}\n        aria-haspopup=\"dialog\"\n        aria-label={isExporting ? 'Exportando relatório, aguarde...' : 'Abrir opções de exportação de relatório'}\n        aria-describedby={isExporting ? 'export-status' : undefined}\n      >\n        {isExporting ? (\n          <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" aria-hidden=\"true\" />\n        ) : (\n          <Download className=\"w-4 h-4 mr-2\" aria-hidden=\"true\" />\n        )}\n        <span aria-hidden={!isExporting}>\n          {isExporting ? 'Exportando...' : 'Exportar Relatório'}\n        </span>\n        {isExporting && (\n          <span id=\"export-status\" className=\"sr-only\">\n            Processando exportação do relatório, aguarde...\n          </span>\n        )}\n      </button>\n\n      {showOptions && (\n        <div \n          className=\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50\"\n          role=\"dialog\"\n          aria-modal=\"true\"\n          aria-labelledby=\"export-options-title\"\n          aria-describedby=\"export-options-description\"\n        >\n          <div className=\"p-4\">\n            <h3 \n              id=\"export-options-title\"\n              className=\"text-lg font-semibold text-gray-900 mb-4\"\n            >\n              Opções de Exportação\n            </h3>\n            <p \n              id=\"export-options-description\" \n              className=\"sr-only\"\n            >\n              Selecione o formato e as opções para exportar o relatório financeiro\n            </p>\n\n            {/* Formato */}\n            <fieldset className=\"mb-4\">\n              <legend id=\"format-legend\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Formato do arquivo\n              </legend>\n              <div className=\"grid grid-cols-2 gap-2\" role=\"radiogroup\" aria-labelledby=\"format-legend\">\n                <button\n                  onClick={() => setExportOptions(prev => ({ ...prev, format: 'pdf' }))}\n                  className={`flex items-center justify-center px-3 py-2 rounded-md border text-sm font-medium transition-colors ${\n                    exportOptions.format === 'pdf'\n                      ? 'border-blue-500 bg-blue-50 text-blue-700'\n                      : 'border-gray-300 bg-white text-gray-700 hover:bg-gray-50'\n                  }`}\n                  role=\"radio\"\n                  aria-checked={exportOptions.format === 'pdf'}\n                  aria-label=\"Formato PDF - Documento portátil\"\n                >\n                  <FileText className=\"w-4 h-4 mr-2\" aria-hidden=\"true\" />\n                  PDF\n                </button>\n                <button\n                  onClick={() => setExportOptions(prev => ({ ...prev, format: 'excel' }))}\n                  className={`flex items-center justify-center px-3 py-2 rounded-md border text-sm font-medium transition-colors ${\n                    exportOptions.format === 'excel'\n                      ? 'border-green-500 bg-green-50 text-green-700'\n                      : 'border-gray-300 bg-white text-gray-700 hover:bg-gray-50'\n                  }`}\n                  role=\"radio\"\n                  aria-checked={exportOptions.format === 'excel'}\n                  aria-label=\"Formato Excel - Planilha eletrônica\"\n                >\n                  <FileSpreadsheet className=\"w-4 h-4 mr-2\" aria-hidden=\"true\" />\n                  Excel\n                </button>\n                <button\n                  onClick={() => setExportOptions(prev => ({ ...prev, format: 'csv' }))}\n                  className={`flex items-center justify-center px-3 py-2 rounded-md border text-sm font-medium transition-colors ${\n                    exportOptions.format === 'csv'\n                      ? 'border-orange-500 bg-orange-50 text-orange-700'\n                      : 'border-gray-300 bg-white text-gray-700 hover:bg-gray-50'\n                  }`}\n                  role=\"radio\"\n                  aria-checked={exportOptions.format === 'csv'}\n                  aria-label=\"Formato CSV - Valores separados por vírgula\"\n                >\n                  <FileSpreadsheet className=\"w-4 h-4 mr-2\" aria-hidden=\"true\" />\n                  CSV\n                </button>\n                <button\n                  onClick={() => setExportOptions(prev => ({ ...prev, format: 'json' }))}\n                  className={`flex items-center justify-center px-3 py-2 rounded-md border text-sm font-medium transition-colors ${\n                    exportOptions.format === 'json'\n                      ? 'border-purple-500 bg-purple-50 text-purple-700'\n                      : 'border-gray-300 bg-white text-gray-700 hover:bg-gray-50'\n                  }`}\n                  role=\"radio\"\n                  aria-checked={exportOptions.format === 'json'}\n                  aria-label=\"Formato JSON - Dados estruturados\"\n                >\n                  <FileText className=\"w-4 h-4 mr-2\" aria-hidden=\"true\" />\n                  JSON\n                </button>\n              </div>\n            </fieldset>\n\n            {/* Templates PDF */}\n            {exportOptions.format === 'pdf' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Template PDF\n                </label>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center justify-between p-3 border border-gray-200 rounded-lg bg-gray-50\">\n                    <div className=\"flex items-center space-x-3\">\n                      <FileText className=\"w-5 h-5 text-gray-500\" />\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-900\">\n                          {selectedTemplate ? selectedTemplate.name : 'Template Padrão'}\n                        </p>\n                        <p className=\"text-xs text-gray-600\">\n                          {selectedTemplate ? selectedTemplate.description : 'Usar template padrão do sistema'}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-1\">\n                      <button\n                        onClick={openTemplateSelector}\n                        className=\"p-2 text-gray-500 hover:text-blue-600 rounded-lg hover:bg-white\"\n                        title=\"Selecionar template\"\n                      >\n                        <Settings className=\"w-4 h-4\" />\n                      </button>\n                      <button\n                        onClick={openTemplateCustomizer}\n                        className=\"p-2 text-gray-500 hover:text-purple-600 rounded-lg hover:bg-white\"\n                        title=\"Customizar template\"\n                      >\n                        <Settings className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Configurações específicas para CSV */}\n            {exportOptions.format === 'csv' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Configurações CSV\n                </label>\n                <div className=\"space-y-2\">\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={exportOptions.csvOptions?.includeHeaders !== false}\n                      onChange={(e) => setExportOptions(prev => ({\n                        ...prev,\n                        csvOptions: { ...prev.csvOptions, includeHeaders: e.target.checked }\n                      }))}\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    />\n                    <span className=\"ml-2 text-sm text-gray-700\">Incluir cabeçalhos</span>\n                  </label>\n                  <div className=\"flex items-center space-x-2\">\n                    <label className=\"text-sm text-gray-700\">Separador:</label>\n                    <select\n                      value={exportOptions.csvOptions?.delimiter || ','}\n                      onChange={(e) => setExportOptions(prev => ({\n                        ...prev,\n                        csvOptions: { ...prev.csvOptions, delimiter: e.target.value }\n                      }))}\n                      className=\"text-sm border border-gray-300 rounded px-2 py-1\"\n                    >\n                      <option value=\",\">Vírgula (,)</option>\n                      <option value=\";\">Ponto e vírgula (;)</option>\n                      <option value=\"\\t\">Tab</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Configurações específicas para JSON */}\n            {exportOptions.format === 'json' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Configurações JSON\n                </label>\n                <div className=\"space-y-2\">\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={exportOptions.jsonOptions?.pretty !== false}\n                      onChange={(e) => setExportOptions(prev => ({\n                        ...prev,\n                        jsonOptions: { ...prev.jsonOptions, pretty: e.target.checked }\n                      }))}\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    />\n                    <span className=\"ml-2 text-sm text-gray-700\">Formatação legível</span>\n                  </label>\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={exportOptions.jsonOptions?.includeMetadata !== false}\n                      onChange={(e) => setExportOptions(prev => ({\n                        ...prev,\n                        jsonOptions: { ...prev.jsonOptions, includeMetadata: e.target.checked }\n                      }))}\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    />\n                    <span className=\"ml-2 text-sm text-gray-700\">Incluir metadados</span>\n                  </label>\n                </div>\n              </div>\n            )}\n\n            {/* Conteúdo */}\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Incluir no Relatório\n              </label>\n              <div className=\"space-y-2\">\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={exportOptions.includeKPIs}\n                    onChange={() => toggleOption('includeKPIs')}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">Indicadores (KPIs)</span>\n                </label>\n                \n                {exportOptions.format === 'pdf' && (\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={exportOptions.includeCharts}\n                      onChange={() => toggleOption('includeCharts')}\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    />\n                    <span className=\"ml-2 text-sm text-gray-700\">Gráficos</span>\n                  </label>\n                )}\n                \n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={exportOptions.includeTransactions}\n                    onChange={() => toggleOption('includeTransactions')}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">Transações</span>\n                </label>\n                \n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={exportOptions.includeAccountsPayable}\n                    onChange={() => toggleOption('includeAccountsPayable')}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">Contas a Pagar</span>\n                </label>\n              </div>\n            </div>\n\n            {/* Botões de Ação */}\n            <div className=\"flex justify-between pt-4 border-t border-gray-200\">\n              <button\n                onClick={() => setShowOptions(false)}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                Cancelar\n              </button>\n              <button\n                onClick={handleExport}\n                disabled={isExporting}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {isExporting ? (\n                  <>\n                    <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                    Exportando...\n                  </>\n                ) : (\n                  <>\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Exportar {exportOptions.format === 'pdf' ? 'PDF' : 'Excel'}\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Overlay para fechar o modal */}\n      {showOptions && (\n        <div\n          className=\"fixed inset-0 z-40\"\n          onClick={() => setShowOptions(false)}\n        />\n      )}\n\n      {/* Modal de Seleção de Template */}\n      {showTemplateSelector && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n          <div className=\"max-w-4xl w-full mx-4\">\n            <PDFTemplateSelector\n              selectedTemplateId={selectedTemplate?.id}\n              onTemplateSelect={handleTemplateSelect}\n              onClose={() => setShowTemplateSelector(false)}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Modal de Customização de Template */}\n      {showTemplateCustomizer && selectedTemplate && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n          <div className=\"max-w-6xl w-full mx-4\">\n            <PDFTemplateCustomizer\n              template={selectedTemplate}\n              onSave={handleTemplateCustomize}\n              onCancel={() => setShowTemplateCustomizer(false)}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};"],"names":["CacheService","constructor","options","__publicField","this","Map","defaultTTL","ttl","maxSize","set","key","data","now","Date","timeToLive","cleanup","cache","size","oldestKey","getOldestKey","delete","cacheItem","timestamp","expiresAt","get","item","has","clear","keysToDelete","forEach","push","getStats","items","Array","from","values","map","age","oldestTimestamp","Infinity","generateKey","prefix","params","Object","keys","sort","JSON","stringify","join","cacheService","exportService","exportToPDF","includeCharts","includeTransactions","includeAccountsPayable","includeKPIs","fileName","toISOString","split","pdf","jsPDF","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","yPosition","setFontSize","setFont","text","align","period","generatedAt","formatCurrency","kpis","currentBalance","totalIncome","totalExpenses","accountsPayable","overdueAccounts","label","value","addChartsToPDF","addPage","transactions","length","line","slice","transaction","date","toLocaleDateString","type","description","substring","category","amount","account","dueDate","status","totalPages","getNumberOfPages","i","setPage","save","error","Error","exportToExcel","workbook","XLSX.utils","book_new","kpiData","kpiWorksheet","aoa_to_sheet","utils","book_append_sheet","transactionData","transactionWorksheet","accountsData","accountsWorksheet","writeFileSync","chartsContainer","document","querySelector","canvas","html2canvas","scale","useCORS","allowTaint","backgroundColor","imgData","toDataURL","imgWidth","imgHeight","height","width","addImage","Intl","NumberFormat","style","currency","format","prepareExportData","toLocaleString","exportWithCache","cacheKey","dataHash","generateDataHash","cachedResult","downloadBlob","blob","generateExcelBlob","dataString","kpisCount","transactionsCount","accountsPayableCount","hash","charCodeAt","toString","totalRevenue","netProfit","t","a","excelBuffer","XLSX.write","bookType","Blob","url","URL","createObjectURL","link","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","exportToCSV","csvOptions","delimiter","includeHeaders","encoding","csvContent","exportToJSON","jsonOptions","pretty","includeMetadata","exportData","metadata","exportedAt","version","source","formatted","id","dateFormatted","typeLabel","amountFormatted","dueDateFormatted","statusLabel","isOverdue","summary","totalTransactions","totalAccountsPayable","overdueAccountsCount","filter","incomeTransactions","expenseTransactions","jsonString","clearExportCache","getCacheStats","DEFAULT_PDF_TEMPLATES","name","config","orientation","margins","top","right","bottom","left","header","enabled","showLogo","showTitle","showDate","textColor","fontSize","footer","showPageNumbers","showCompanyInfo","content","showKPIs","showCharts","chartsPerRow","chartHeight","showDataTable","lineHeight","colors","primary","secondary","accent","background","border","branding","companyName","companyAddress","companyEmail","companyPhone","pdfTemplateService","loadTemplatesFromStorage","stored","localStorage","getItem","storageKey","customTemplates","parse","templates","some","dt","saveTemplatesToStorage","setItem","getAllTemplates","getTemplateById","find","createTemplate","template","newTemplate","Math","random","substr","updateTemplate","updates","index","findIndex","deleteTemplate","splice","duplicateTemplate","newName","originalTemplate","preview","validateTemplate","errors","trim","isValid","colorRegex","entries","color","test","exportTemplates","templateIds","templatesToExport","includes","importTemplates","jsonData","success","isArray","validation","message","resetToDefaults","removeItem","PDFTemplateSelector","selectedTemplateId","onTemplateSelect","onClose","setTemplates","useState","selectedTemplate","setSelectedTemplate","isLoading","setIsLoading","useEffect","loadTemplates","allTemplates","jsxRuntimeExports","jsx","className","children","jsxs","FileText","Upload","accept","onChange","event","file","_a","target","files","reader","FileReader","onload","e","result","alert","readAsText","onClick","startsWith","title","Download","handleTemplateSelect","Check","toUpperCase","stopPropagation","async","handleDuplicateTemplate","Copy","templateId","window","confirm","handleDeleteTemplate","Trash2","disabled","PDFTemplateCustomizer","onSave","onCancel","editedTemplate","setEditedTemplate","activeTab","setActiveTab","previewMode","setPreviewMode","updateConfig","path","newConfig","current","tabs","icon","Layout","Palette","Image","Settings","Eye","RotateCcw","savedTemplate","Save","tab","Icon","companyLogo","BarChart3","Table","margin","parseInt","min","max","desc","checked","placeholder","ExportButton","variant","isExporting","setIsExporting","showOptions","setShowOptions","showTemplateSelector","setShowTemplateSelector","showTemplateCustomizer","setShowTemplateCustomizer","exportOptions","setExportOptions","toggleOption","option","prev","outline","sm","md","lg","Loader2","role","FileSpreadsheet","_b","_c","_d","pdfTemplate","export","Fragment"],"mappings":"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"}
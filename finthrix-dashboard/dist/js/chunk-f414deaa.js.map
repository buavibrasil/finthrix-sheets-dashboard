{"version":3,"file":"chunk-f414deaa.js","sources":["../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.dataset.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/react-chartjs-2/dist/index.js","../../src/components/charts/LineChart.tsx","../../src/components/charts/PieChart.tsx","../../src/components/charts/BarChart.tsx","../../src/components/charts/AreaChart.tsx"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","import React, { memo, useMemo } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ChartOptions,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface LineChartProps {\n  data: {\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      borderColor: string;\n      backgroundColor: string;\n      tension?: number;\n    }[];\n  };\n  title?: string;\n  height?: number;\n}\n\nconst LineChartComponent: React.FC<LineChartProps> = ({ \n  data, \n  title = 'Gráfico de Linha',\n  height = 300 \n}) => {\n  // Memoizar as opções do gráfico para evitar recriação desnecessária\n  const options: ChartOptions<'line'> = useMemo(() => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: !!title,\n        text: title,\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function(context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: R$ ${value.toLocaleString('pt-BR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Período'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Valor (R$)'\n        },\n        ticks: {\n          callback: function(value) {\n            return `R$ ${Number(value).toLocaleString('pt-BR')}`;\n          }\n        }\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    }\n  }), [title]);\n\n  // Memoizar o estilo para evitar recriação\n  const containerStyle = useMemo(() => ({ \n    height: `${height}px` \n  }), [height]);\n\n  return (\n    <div style={containerStyle}>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\n// Exportar componente memoizado\nconst LineChart = memo(LineChartComponent);\n\nexport { LineChart };\nexport default LineChart;","import React, { memo, useMemo } from 'react';\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  Tooltip,\n  Legend,\n  ChartOptions,\n} from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\ninterface PieChartProps {\n  data: {\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      backgroundColor: string[];\n      borderColor: string[];\n      borderWidth?: number;\n    }[];\n  };\n  title?: string;\n  height?: number;\n}\n\nconst PieChartComponent: React.FC<PieChartProps> = ({ \n  data, \n  title = 'Gráfico de Pizza',\n  height = 300 \n}) => {\n  // Memoizar as opções do gráfico para evitar recriação desnecessária\n  const options: ChartOptions<'pie'> = useMemo(() => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'right' as const,\n        labels: {\n          usePointStyle: true,\n          padding: 20,\n        }\n      },\n      title: {\n        display: !!title,\n        text: title,\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const label = context.label || '';\n            const value = context.parsed;\n            const total = context.dataset.data.reduce((acc: number, curr: number) => acc + curr, 0);\n            const percentage = ((value / total) * 100).toFixed(1);\n            return `${label}: R$ ${value.toLocaleString('pt-BR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })} (${percentage}%)`;\n          }\n        }\n      }\n    }\n  }), [title]);\n\n  // Memoizar o estilo para evitar recriação\n  const containerStyle = useMemo(() => ({ \n    height: `${height}px` \n  }), [height]);\n\n  return (\n    <div style={containerStyle}>\n      <Pie data={data} options={options} />\n    </div>\n  );\n};\n\n// Exportar componente memoizado\nconst PieChart = memo(PieChartComponent);\n\nexport { PieChart };\nexport default PieChart;","import React, { memo, useMemo } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ChartOptions,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface BarChartProps {\n  data: {\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      backgroundColor: string | string[];\n      borderColor: string | string[];\n      borderWidth?: number;\n    }[];\n  };\n  title?: string;\n  height?: number;\n  orientation?: 'vertical' | 'horizontal';\n}\n\nconst BarChartComponent: React.FC<BarChartProps> = ({ \n  data, \n  title = 'Gráfico de Barras',\n  height = 300,\n  orientation = 'vertical'\n}) => {\n  // Memoizar as opções do gráfico para evitar recriação desnecessária\n  const options: ChartOptions<'bar'> = useMemo(() => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    indexAxis: orientation === 'horizontal' ? 'y' as const : 'x' as const,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n        labels: {\n          usePointStyle: true,\n          padding: 20,\n        }\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function(context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y || context.parsed.x;\n            return `${label}: R$ ${value.toLocaleString('pt-BR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: orientation === 'horizontal' ? 'Valor (R$)' : 'Categorias'\n        },\n        ticks: orientation === 'horizontal' ? {\n          callback: function(value) {\n            return `R$ ${Number(value).toLocaleString('pt-BR')}`;\n          }\n        } : undefined,\n        grid: {\n          display: true,\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: orientation === 'horizontal' ? 'Categorias' : 'Valor (R$)'\n        },\n        ticks: orientation === 'vertical' ? {\n          callback: function(value) {\n            return `R$ ${Number(value).toLocaleString('pt-BR')}`;\n          }\n        } : undefined,\n        grid: {\n          display: true,\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    }\n  }), [title, orientation]);\n\n  // Memoizar o estilo para evitar recriação\n  const containerStyle = useMemo(() => ({ \n    height: `${height}px` \n  }), [height]);\n\n  return (\n    <div style={containerStyle}>\n      <Bar data={data} options={options} />\n    </div>\n  );\n};\n\n// Exportar componente memoizado\nconst BarChart = memo(BarChartComponent);\n\nexport { BarChart };\nexport default BarChart;","import React, { memo, useMemo } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  ChartOptions,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\ninterface AreaChartProps {\n  data: {\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      borderColor: string;\n      backgroundColor: string;\n      fill?: boolean | string;\n      tension?: number;\n    }[];\n  };\n  title?: string;\n  height?: number;\n  stacked?: boolean;\n}\n\nconst AreaChartComponent: React.FC<AreaChartProps> = ({ \n  data, \n  title = 'Gráfico de Área',\n  height = 300,\n  stacked = false\n}) => {\n  // Memoizar as opções do gráfico para evitar recriação desnecessária\n  const options: ChartOptions<'line'> = useMemo(() => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n        labels: {\n          usePointStyle: true,\n          padding: 20,\n        }\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function(context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: R$ ${value.toLocaleString('pt-BR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })}`;\n          },\n          footer: function(tooltipItems) {\n            if (stacked && tooltipItems.length > 1) {\n              const total = tooltipItems.reduce((sum, item) => sum + item.parsed.y, 0);\n              return `Total: R$ ${total.toLocaleString('pt-BR', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })}`;\n            }\n            return '';\n          }\n        }\n      },\n      filler: {\n        propagate: false\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Período'\n        },\n        stacked: stacked,\n        grid: {\n          display: true,\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Valor (R$)'\n        },\n        stacked: stacked,\n        ticks: {\n          callback: function(value) {\n            return `R$ ${Number(value).toLocaleString('pt-BR')}`;\n          }\n        },\n        grid: {\n          display: true,\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    },\n    elements: {\n      point: {\n        radius: 4,\n        hoverRadius: 6,\n        borderWidth: 2\n      },\n      line: {\n        borderWidth: 2\n      }\n    }\n  }), [title, stacked]);\n\n  // Memoizar o estilo para evitar recriação\n  const containerStyle = useMemo(() => ({ \n    height: `${height}px` \n  }), [height]);\n\n  return (\n    <div style={containerStyle}>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\n// Exportar componente memoizado\nconst AreaChart = memo(AreaChartComponent);\n\nexport { AreaChart };\nexport default AreaChart;"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","meta","_clip","disabled","xScale","yScale","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","__publicField","BarController","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","_index_","_value_","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","animationsDisabled","pointCount","distanceToDefinedLo","findIndex","distanceToDefinedHi","_getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","_scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart$1","_a","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","Chart","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","clipSelf","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","getPointPositionForValue","_getTargetValue","getDistanceFromCenterForValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","pointLabels","additionalAngle","centerPointLabels","getPointLabelContext","pointPosition","getPointPosition","drawingArea","plFont","getIndexAngle","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","xCenter","yCenter","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","angleLines","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","destroyChart","useEffect","nextOptions","setOptions","React","createElement","role","forwardRef","createTypedChart","registerables","Line","Bar","Pie","ChartJS","LineChart","memo","useMemo","toLocaleString","jsxRuntimeExports","jsx","children","PieChart","percentage","toFixed","BarChart","orientation","Filler","AreaChart","sum","filler"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}